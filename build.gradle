buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
    	maven {
      		url "https://artifacts.fizzpod.com/public/mvn/"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'com.fizzpod:gradle-java-opinion:0.14.28'
		classpath 'com.github.johnrengelman:shadow:8.1.1'
  	}
}
repositories {
	mavenLocal()
	mavenCentral()
	maven {
	  url "https://artifacts.fizzpod.com/public/mvn/"
	}
}

apply plugin: 'groovy'
apply plugin: 'application'


compileJava {
    options.release = 17
}

compileGroovy {
    options.release = 17
}


application {
	applicationName = "wiser"
    mainClass = 'com.fizzpod.wiserproxy.Main'
}

dependencies {
	implementation 'org.apache.groovy:groovy-all:4.0.28'
	implementation 'org.apache.groovy:groovy-contracts:4.0.28'

	implementation 'org.tinylog:tinylog-api:2.7.0'
	implementation 'org.tinylog:tinylog-impl:2.7.0'
	implementation 'com.squareup.okhttp3:okhttp:5.1.0'

	testImplementation platform("org.spockframework:spock-bom:2.3-groovy-4.0")
  	testImplementation "org.spockframework:spock-core"

}

/*
githubRelease {
    token project.hasProperty("github_release_token")? github_release_token: ""
	tagName 'release-' + project.version
	releaseName 'Release ' + project.version
    owner "boxheed" 
    targetCommitish "main" 
    generateReleaseNotes true 
    draft false 
	dryRun false
    releaseAssets { ->
		jar.outputs.files
	}
}
*/
test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}
